@model WebApplication1.Models.transfer

@{
    ViewBag.Title = "Transfer Amount";
}

<h3 style="text-align:center">Transfer Amount</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.sourceaccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sourceaccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sourceaccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.DropDownList("account",
         new SelectList(Enum.GetValues(typeof(WebApplication1.Models.accounttype))), "Select",
         new { @class = "form-control" }
)
                @Html.ValidationMessageFor(model => model.account, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.targetaccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.targetaccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.targetaccount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.account1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.DropDownList("account1",
         new SelectList(Enum.GetValues(typeof(WebApplication1.Models.accounttype))), "Select",
         new { @class = "form-control" }
)
                @Html.ValidationMessageFor(model => model.account1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tframt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tframt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tframt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="transfer" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "cashier", "homepage")
</div>
