@model WebApplication1.Models.customercreate

@{
    ViewBag.Title = "Index";
}

<h3 style="text-align:center">Customer Registration</h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ssnid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ssnid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ssnid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.caline1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.caline1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.caline1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.caline2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.caline2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.caline2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cstate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cstate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cstate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <input type="reset" value="Reset" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "executive","homepage")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    
}
@{
    if (ViewData["result"] != null && ViewData["result"].Equals("1"))
    {
        ViewData["result"] = null;
        <script type="text/javascript" language="javascript">
            alert("Customer creation initiated successfully");
        </script>
    }
}